server.port=8888
spring.profiles.include=oauth

#h2 console
#spring.h2.console.enabled=true
#spring.h2.console.settings.web-allow-others=true
#spring.h2.console.path=/h2-console
#h2 db
#spring.datasource.url=jdbc:h2:~/carrot;AUTO_SERVER=true
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect4
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.open-in-view=false

#maria db
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/carrotpj?useSSL=false&characterEncoding=UTF-8rewriteBatchedStatements=true&profileSQL=true&maxQuerySizeToLog=500
spring.datasource.username=root
spring.datasource.password=1234
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

#show sql
#system.print.out으로 출력
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true
#logger로 출력
#logging.level.org.hibernate.SQL=debug: debug
#sql문에서 (?)들이 bindingparameter = "실제값"으로 나옴.
#logging.level.org.hibernate.type.descriptor.sql=trace
#JPQL 보기
#spring.jpa.properties.hibernate.use_sql_comments = true
#P6spy
decorator.datasource.p6spy.enable-logging = true

#ddl auto
spring.jpa.hibernate.ddl-auto=update
spring.devtools.livereload.enabled=true
spring.thymeleaf.cache=false

#img
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=500MB
spring.servlet.multipart.file-size-threshold=100MB
#spring.servlet.multipart.location=c:\\upload
spring.servlet.multipart.location=/Users/img/post

#post_img storage
#file.postImg = c:\\upload
file.postImg = /Users/img

#post_default_img
#default.postImg = C:/upload/default_image.png
default.postImg = /Users/img/post/default_image.png

#profile_img storage
#dir.img-profile = C:/upload/pf/
#dir.img-profile = /Users/img/pf/


#errors
server.error.include-exception=true
server.error.include-message=always
server.error.include-stacktrace=always
server.error.include-binding-errors=always
spring.messages.basename=errors

spring.main.allow-bean-definition-overriding=true

spring.jpa.defer-datasource-initialization= true

#spring boot batch + scheduler
#batch 스키마-table 자동 생성 (always/never)
spring.batch.jdbc.initialize-schema=never
#시작과 동시에 batch 실행되는 것 방지
spring.batch.job.enabled=false
#jdbc batch
spring.jpa.properties.hibernate.jdbc.batch_size= 100
